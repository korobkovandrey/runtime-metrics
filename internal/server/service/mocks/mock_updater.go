// Code generated by MockGen. DO NOT EDIT.
// Source: updater.go
//
// Generated by this command:
//
//	mockgen -source=updater.go -destination=mocks/mock_updater.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	model "github.com/korobkovandrey/runtime-metrics/internal/model"
	gomock "go.uber.org/mock/gomock"
)

// MockUpdaterRepository is a mock of UpdaterRepository interface.
type MockUpdaterRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUpdaterRepositoryMockRecorder
	isgomock struct{}
}

// MockUpdaterRepositoryMockRecorder is the mock recorder for MockUpdaterRepository.
type MockUpdaterRepositoryMockRecorder struct {
	mock *MockUpdaterRepository
}

// NewMockUpdaterRepository creates a new mock instance.
func NewMockUpdaterRepository(ctrl *gomock.Controller) *MockUpdaterRepository {
	mock := &MockUpdaterRepository{ctrl: ctrl}
	mock.recorder = &MockUpdaterRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUpdaterRepository) EXPECT() *MockUpdaterRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUpdaterRepository) Create(arg0 context.Context, arg1 *model.MetricRequest) (*model.Metric, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(*model.Metric)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockUpdaterRepositoryMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUpdaterRepository)(nil).Create), arg0, arg1)
}

// Find mocks base method.
func (m *MockUpdaterRepository) Find(arg0 context.Context, arg1 *model.MetricRequest) (*model.Metric, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", arg0, arg1)
	ret0, _ := ret[0].(*model.Metric)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Find indicates an expected call of Find.
func (mr *MockUpdaterRepositoryMockRecorder) Find(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockUpdaterRepository)(nil).Find), arg0, arg1)
}

// Update mocks base method.
func (m *MockUpdaterRepository) Update(arg0 context.Context, arg1 *model.MetricRequest) (*model.Metric, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", arg0, arg1)
	ret0, _ := ret[0].(*model.Metric)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockUpdaterRepositoryMockRecorder) Update(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockUpdaterRepository)(nil).Update), arg0, arg1)
}
